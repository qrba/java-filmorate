DROP TABLE IF EXISTS film_likes CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS director_films CASCADE;
DROP TABLE IF EXISTS directors CASCADE;
DROP TABLE IF EXISTS review_likes CASCADE;
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS films CASCADE;

CREATE TABLE IF NOT EXISTS mpa_rating (
  id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(255)
);

CREATE TABLE IF NOT EXISTS users (
  id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar(255) NOT NULL,
  login varchar(255) NOT NULL,
  name varchar(255) NOT NULL,
  birthday date NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
  id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(255) NOT NULL,
  description varchar(200) NOT NULL,
  release_date date NOT NULL,
  duration int CHECK (duration > 0),
  mpa_id int REFERENCES mpa_rating (id)
);

CREATE TABLE IF NOT EXISTS genres (
  id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(255)
);

CREATE TABLE IF NOT EXISTS reviews (
  id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  content varchar NOT NULL,
  is_positive boolean,
  user_id int REFERENCES users (id),
  film_id int REFERENCES films (id)
);

CREATE TABLE IF NOT EXISTS review_likes (
  review_id int REFERENCES reviews (id),
  user_id int REFERENCES users (id),
  liked boolean
);

CREATE TABLE IF NOT EXISTS directors (
  id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(200)
);

CREATE TABLE IF NOT EXISTS director_films (
  director_id int REFERENCES directors (id),
  film_id int REFERENCES films (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS events (
  id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  timestamp bigint,
  user_id int REFERENCES users (id),
  event_type varchar(50),
  operation varchar(50),
  entity_id int
);

CREATE TABLE IF NOT EXISTS friends (
  user_id int REFERENCES users (id),
  friend_id int REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS film_genres (
  film_id int REFERENCES films (id),
  genre_id int REFERENCES genres (id)
);

CREATE TABLE IF NOT EXISTS film_likes (
  film_id int REFERENCES films (id),
  user_id int REFERENCES users (id)
);
